/*const additionalskill = await this.AdditionalSkillRepository.find({where:{ UserId: UserId}});
    for (var _i = 0; _i < additionalskill.length; _i++) {
      await this.AdditionalSkillRepository.remove(additionalskill[_i]);
    }

    for (var _i = 0; _i < patchDto.SoftSkill.length; _i++) {
      const additionalskill = new AdditionalSkill();
      additionalskill.UserId = UserId;
      additionalskill.AdditionalSkill  = patchDto.SoftSkill[_i]; 
      additionalskill.create_time = isoTime ;
      additionalskill.last_modified =  [isoTime] ;
      additionalskill.ResumeId =  null ;
      await this.AdditionalSkillRepository.save(additionalskill);
    }

    /*const certificate = await this.CertificateRepository.find({where:{ UserId: UserId}});
    for (var _i = 0; _i < certificate.length; _i++) {
      await this.CertificateRepository.remove(certificate[_i]);
    }

    for (var _i = 0; _i < createDto.CertName.length; _i++) {
      const certificate = new Certificate();
      certificate.UserId = UserId;
      certificate.CertName = createDto.CertName[_i]
      certificate.CertPic = createDto.CertPic[_i]
      certificate.CertYear = createDto.CertYear[_i]
      await this.CertificateRepository.save(certificate);
    }

    const educationHistory = await this.EducationHistoryRepository.find({where:{ UserId: UserId}});
    for (var _i = 0; _i < educationHistory.length; _i++) {
      await this.EducationHistoryRepository.remove(educationHistory[_i]);
    }

    for (var _i = 0; _i < createDto.Degree.length; _i++) {
      const educationHistory = new EducationHistory();
      educationHistory.UserId = UserId;
      educationHistory.Degree = createDto.Degree[_i];
      educationHistory.Facalty = createDto.Facalty[_i];
      educationHistory.Field_of_study = createDto.Field_of_study[_i];
      educationHistory.Academy = createDto.Academy[_i];
      educationHistory.Grade = createDto.Grade[_i];
      educationHistory.Education_End_Year = createDto.Education_End_Year[_i];
      await this.EducationHistoryRepository.save(educationHistory);
    }

    const workHistory = await this.WorkHistoryRepository.find({where:{ UserId: UserId}});
    for (var _i = 0; _i < workHistory.length; _i++) {
      await this.WorkHistoryRepository.remove(workHistory[_i]);
    }

    for (var _i = 0; _i < createDto.Work_JobName.length; _i++) {
      const workHistory = new WorkHistory();
      workHistory.UserId = UserId;
      workHistory.Work_JobName = createDto.Work_JobName[_i];
      workHistory.Work_JobType = createDto.Work_JobType[_i];
      workHistory.Company = createDto.Company[_i];
      workHistory.Work_Start_Month = createDto.Work_Start_Month[_i];
      workHistory.Work_End_Month = createDto.Work_End_Month[_i];
      workHistory.Work_Start_Year = createDto.Work_Start_Year[_i];
      workHistory.Work_End_Year = createDto.Work_End_Year[_i];
      workHistory.Salary = createDto.Salary[_i]; 
      workHistory.Infomation = createDto.Infomation[_i]; 
      await this.WorkHistoryRepository.save(workHistory);
    }

    const interestedJob = await this.InterestedJobRepository.find({where:{ UserId: UserId}});
    for (var _i = 0; _i < interestedJob.length; _i++) {
      await this.InterestedJobRepository.remove(interestedJob[_i]);
    }

    for (var _i = 0; _i < createDto.Job_JobName.length; _i++) {
      const interestedJob = new InterestedJob();
      interestedJob.UserId = UserId;
      interestedJob.Job_JobName = createDto.Job_JobName[_i];
      interestedJob.Job_Objective = createDto.Job_Objective[_i];
      interestedJob.Job_Score = createDto.Job_Score[_i];
      interestedJob.Job_SkillName = createDto.Job_SkillName[_i];
      await this.InterestedJobRepository.save(interestedJob);
    }*/

async GetInfo(UserId:string) {
    const result = new CreateRegisDto;
    const userid = new ObjectID(UserId);
    const account=await this.accountRepository.findOne({where:{_id:userid}});
    const userinfo=await this.userinfoRepository.findOne({where:{UserId:UserId}});

    result.Email=account.Email;
    result.Password=account.Password[account.Password.length - 1];
    result.ProfilePic=account.ProfilePic;
    result.Privacy=account.Privacy;

    result.Firstname=userinfo.Firstname;
    result.Lastname=userinfo.Lastname;
    result.Birthday=userinfo.Birthday;
    result.Gender=userinfo.Gender;
    result.AboutMe=userinfo.AboutMe;
    result.Email2nd=userinfo.Email2nd;
    result.Country=userinfo.Country;
    result.Province=userinfo.Province;
    result.City=userinfo.City;

    const softskill_arr=[];
    const additionalskill=await this.AdditionalSkillRepository.find({where:{UserId:UserId}});
    for (var _i = 0; _i < additionalskill.length; _i++) {
      softskill_arr.push(additionalskill[_i].AdditionalSkill);
    }
    result.SoftSkill=softskill_arr;
   

    const CertName_arr=[];
    const CertPic_arr=[];
    const CertYear_arr=[];
    const Certificate=await this.CertificateRepository.find({where:{UserId:UserId}});
    //const Certificate=(await this.CertificateRepository.find({where:{UserId:UserId}})).;
    for (var _i = 0; _i < Certificate.length; _i++) {
      CertName_arr.push(Certificate[_i].CertName);
      CertPic_arr.push(Certificate[_i].CertPic);
      CertYear_arr.push(Certificate[_i].CertYear);

    }
    result.CertName=CertName_arr;
    result.CertPic=CertPic_arr;
    result.CertYear=CertYear_arr;


    const Degree_arr=[];
    const Facalty_arr=[];
    const Field_of_study_arr=[];
    const Academy_arr=[];
    const Grade_arr=[];
    const Education_End_Year_arr=[];
    const educationHistory=await this.EducationHistoryRepository.find({where:{UserId:UserId}});
    for (var _i = 0; _i < educationHistory.length; _i++) {
      Degree_arr.push(educationHistory[_i].Degree);
      Facalty_arr.push(educationHistory[_i].Facalty);
      Field_of_study_arr.push(educationHistory[_i].Field_of_study);
      Academy_arr.push(educationHistory[_i].Academy);
      Grade_arr.push(educationHistory[_i].Grade);
      Education_End_Year_arr.push(educationHistory[_i].Education_End_Year);
    }
    result.Degree=Degree_arr;
    result.Facalty=Facalty_arr;
    result.Field_of_study=Field_of_study_arr;
    result.Academy=Academy_arr;
    result.Grade=Grade_arr;
    result.Education_End_Year=Education_End_Year_arr;
    
    

    const Work_JobName_arr=[];
    const Work_JobType_arr=[];
    const Company_arr=[];
    const Work_Start_Month_arr=[];
    const Work_End_Month_arr=[];
    const Work_Start_Year_arr=[];
    const Work_End_Year_arr=[];
    const Salary_arr=[];
    const Infomation_arr=[];
    const SalaryType_arr=[];
    const workHistory =await this.WorkHistoryRepository.find({where:{UserId:UserId}});
    for (var _i = 0; _i < workHistory.length; _i++) {
      Work_JobName_arr.push(workHistory[_i].Work_JobName);
      Work_JobType_arr.push(workHistory[_i].Work_JobType);
      Company_arr.push(workHistory[_i].Work_Company);
      Work_Start_Month_arr.push(workHistory[_i].Work_Start_Month);
      Work_End_Month_arr.push(workHistory[_i].Work_End_Month);
      Work_Start_Year_arr.push(workHistory[_i].Work_Start_Year);
      Work_End_Year_arr.push(workHistory[_i].Work_End_Year);
      Salary_arr.push(workHistory[_i].Work_Salary);
      Infomation_arr.push(workHistory[_i].Work_Infomation);
      SalaryType_arr.push(workHistory[_i].Work_Salary_Type);
    }
    result.Work_JobName=Work_JobName_arr;
    result.Work_JobType=Work_JobType_arr;
    result.Company=Company_arr;
    result.Work_Start_Month=Work_Start_Month_arr;
    result.Work_End_Month=Work_End_Month_arr;
    result.Work_Start_Year=Work_Start_Year_arr;
    result.Work_End_Year=Work_End_Year_arr;
    result.Salary=Salary_arr;
    result.Infomation=Infomation_arr;
    result.SalaryType=SalaryType_arr;
    
    const Job_Objective_arr=[];
    const Job_Score_arr=[];
    const Job_JobName_arr=[];
    const Job_SkillName_arr=[];
    const IJ=await this.InterestedJobRepository.find({where:{UserId:UserId}});
    for (var _i = 0; _i < IJ.length; _i++) {
      Job_Objective_arr.push(IJ[_i].Job_Objective);
      Job_Score_arr.push(IJ[_i].Job_Score);
      Job_JobName_arr.push(IJ[_i].Job_JobName);
      Job_SkillName_arr.push(IJ[_i].Job_SkillName);

    }

    result.Job_Objective=Job_Objective_arr;
    result.Job_Score=Job_Score_arr;
    result.Job_JobName=Job_JobName_arr;
    result.Job_SkillName=Job_SkillName_arr;
    //*/
    
    return result;
    
  }